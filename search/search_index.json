{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#team-information","title":"Team Information","text":""},{"location":"#team-members","title":"Team Members","text":"<ul> <li>Shon Ha</li> <li>Maximus Mathews</li> <li>Shelton Larance</li> <li>Rohan Fernandez</li> </ul>"},{"location":"#class-overview","title":"Class Overview","text":"<ul> <li>Preparation Date: 1/16/25</li> <li>Spring 2025</li> <li>ASU EGR 314</li> <li>Instructor: Kevin Nichols</li> </ul>"},{"location":"#individual-websites","title":"Individual Websites","text":"Websites Stepper Motor-SH User Interface-RF MQTT-SL Sensor-MM"},{"location":"BPM/","title":"BPM","text":""},{"location":"BPM/#part-1-team-block-diagram","title":"Part 1: Team Block Diagram","text":"<p>Block Diagram Download</p>"},{"location":"BPM/#part-2-sequence-diagram","title":"Part 2: Sequence Diagram","text":""},{"location":"BPM/#part-3-message-types","title":"Part 3: Message Types","text":"Byte Function AZ Start YB Stop Team Members Team IDs Shon Ha h Maximus Mathews m Shelton Larance l Rohan Fernandez f Broadcast X Message Type Description 1. Wifi Toggle - Auto/Manual 1 byte for toggling between Auto and Manual mode 2. Light Level 24 Bytes (6 for each sensor with 2 as identifier and 4 as readings) 3. Voltage Sensor 5 bytes  (1 for identifier and 4 as readings) 4. Button - Digital Signal 2 bytes for 2 buttons to control stepper motor Message Type 1 Definitions Bytes 1 (char) Mode (M) Bytes 2 (char) Automatic or Manual - \"0\" or \"1\" Message Type 2 Definitions Bytes 3-4 (char) Light Level with a space - \"L1\" Bytes 5-8 (char) Light Level Reading - \"XXXX\" Bytes 9-10 (char) Light Level with a space - \"L2\" Bytes 11-14 (char) Light Level Reading - \"XXXX\" Bytes 15-16 (char) Light Level with a space - \"L3\" Bytes 17-20 (char) Light Level Reading - \"XXXX\" Bytes 21-22 (char) Light Level with a space - \"L4\" Bytes 23-26 (char) Light Level Reading - \"XXXX\" Message Type 3 Definitions Bytes 27 (char) Voltage with a space \"V\" Bytes 28-31 (char) Voltage Level Reading  \"X.X\" Message Type 4 Definitions Bytes 32 (char) button left (L) Bytes 33 (char) byte to control motor turning left Bytes 34 (char) button right (R) Bytes 35 (char) byte to control motor turning right"},{"location":"Ideation/","title":"Ideation and Concept Generation","text":""},{"location":"Ideation/#background-information","title":"Background Information","text":""},{"location":"Ideation/#exhibit-goals","title":"Exhibit Goals","text":"<p>The goal of the team's exhibit is to demonstrate atleast one STEM-based concept in an interactive, web-enabled, physical device. This will require describing how the team's prototype functions along with focusing on the viewer's attention with interactive displays and buttons. The exhibit must also demonstrate a physical action, where pressing the button will activate the device. Another exhibit goal involves engaging the viewer with self-testing and focusing on their attention. This will allow viewers to test their knowledge with the prototype. The prototype must consist of atleast four subsystems, with atleast one individual functionality, microcontroller, 3.3V Switching regulator, and in circuit programming circuitry.</p>"},{"location":"Ideation/#target-audience","title":"Target Audience","text":"<p>The prototype will be demonstrated at the Innovation Showcase, with the intended audience being for ASU alumni, industry professionals, and other ASU students. The target audience is intended for students K-12 interested in learning about science, technology, engineering, or math. The goal is to inspire new generations and foster curiousity about STEM fields through an interactive experience that highlights innovation.</p>"},{"location":"Ideation/#ideation","title":"Ideation","text":"<p>The team performed a product brainstorm to generate 100 ideas on possible products for the project. The team considered durability, safety, and comfort when generating ideas. The team used Padlet to collaborate and generate the ideas. After the 100 ideas were generated, the team grouped ideas thematically, ranking top ideas and combining ideas together to possibly generate new ones. Below are pictures from the brainstorming session along with the grouping process. </p>"},{"location":"Ideation/#brainstorming","title":"Brainstorming","text":"<p>&lt;</p>"},{"location":"Ideation/#sort-rank-group","title":"Sort, Rank, Group","text":""},{"location":"Ideation/#concept-generation","title":"Concept Generation","text":"<p>Students need an engaging/creative way to learn STEAM-based concepts to foster learning and inspire creativity. Using the brainstorming processes above, the team decided to focus on solar power, a sustainable energy practive that benefits our environment. Combining the ideas generated as highlighted in red, we came up with a solar tracker, a solar panel capable of adjusting itself automatically in response to different light levels radiating from the sun. Our motor-controlled solar panel is designed to create a fun and educational experience for museum visitors, especially students from K-12. With user-controlled buttons, students can directly interact with the device, making it easier to understand solar energy and how panels track sunlight. The combination of optical and power sensors with an LCD display provides real-time brightness and power level readings, helping students visualize how solar energy is captured. To enhance accessibility, Wi-Fi functionality allows users to control the panel remotely using their mobile devices, offering an alternative to the physical buttons. This mix of interactive features ensures an engaging learning experience that accommodates visitors of different age groups and technical backgrounds. </p> <p>To divide the workload fairly, the project is split among four team members, each handling a crucial part of the system. One teammate is responsible for the stepper motor, ensuring smooth and precise movement of the solar panels. Another will work on the sensors and solar panels, ensuring they function efficiently and integrate well. The third teammate will develop the human-machine interface (HMI), working on the LCD display and button controls to make them simple and intuitive. Lastly, the fourth member will focus on the Wi-Fi connectivity, making sure the mobile interface communicates effectively with the hardware. This balanced division of tasks ensures that every aspect of the project is handled effectively while promoting teamwork. These four subsystems will all communicate over UART through a daisy chain network.</p> <p>Wi-Fi connectivity plays a key role in this project, allowing students to interact with the solar panel remotely through their mobile devices. This two-way communication system ensures that user commands are sent and executed in real-time while also providing feedback on brightness and power levels. By allowing multiple users to interact at once, this feature adds to the overall accessibility and engagement of the project. The device is designed with both physical buttons and an LCD screen for user-friendly operation. The buttons give users direct control over the motor\u2019s movement, making it easy for younger students to experiment with positioning. The LCD screen displays real-time data from the sensors, showing how light intensity affects energy production. The goal is to make the interface simple and easy to use so that all visitors, regardless of age or experience, can enjoy a smooth and frustration-free learning process. The system also integrates sensors and actuators for a responsive, interactive experience. Optical and power sensors detect light intensity and adjust the display to reflect power output changes. The stepper motor moves the solar panels, allowing users to observe the impact of positioning on energy absorption. With these components working together, the project meets the requirement for sensor and actuator-based controlled responses, creating a hands-on and educational experience for students.</p>"},{"location":"Ideation/#exhibit-rationale","title":"Exhibit Rationale","text":"<ol> <li>What kinds of cues will you provide to make the use of your device easier?</li> </ol> <p>Visual cues such as color-coded buttons and changes to the LCD display will help guide users through the interaction of the device. Immediate feedback will also display on the LCD display to show the effects of user actions such as displaying the current power generation from the solar panel based on manual control of the stepper motor.</p> <ol> <li>How do you plan on designing your \"controls\"?</li> </ol> <p>The buttons will be labeled clearly with simple icons, such as arrows for movement and a sun icon for starting or stopping the panel\u2019s tracking. This ensures that even younger students can quickly understand the function of each button. This will be done using vinyl sticker cutouts. WiFi integration will also be used so other students can access the system, displaying current power levels so they can see how solar panels change based on light.</p> <ol> <li>What role will durability, safety, and comfort play in the user experience?</li> </ol> <p>The device will be placed in a 3D printed box to prevent students from accessing the internal hardware, with the solar panel, stepper motor, optical sensor, and HMI being extruded out so students can access it. This will ensure the durability of the internal hardwares along with addressing safety concerns such as exposed circuitry and other elements. To address comfort, physical controls will be designed for students such as bigger buttons and WiFi communication so people don\u2019t have to be crowded around the human interface.</p> <ol> <li>What kind of instruction will be needed to use the device?</li> </ol> <p>This device will be both interactive, participatory, and hands-on, allowing device control through buttons and the LCD display. Students will be required to press buttons to promote visitors' attention and produce sensory learning. A simple interactive guide will be displayed on the LCD screen, displaying where to go and using the arrow buttons to select each function of the device. This will include: power readings, motor control, and switching modes for the solar tracker. The power readings can then be compared to teach similarities and differences on how light affects a solar panel. Along with this, the team will display laminated flashcards near the device informing students on each of the commands and the procedures .</p>"},{"location":"Ideation/#_1","title":"Ideation and Concept Generation","text":""},{"location":"Ideation/#presentation","title":"Presentation","text":"<p>Youtube Link: https://www.youtube.com/watch?v=1WfjeSirecg </p>"},{"location":"Team%20Organization/","title":"Team Charter and Organization","text":""},{"location":"Team%20Organization/#product-mission-statement","title":"Product Mission Statement","text":"<p>Our mission is to spark curiosity and excitement for STEM by creating an innovative, web-interactive device that not only captivates students but transforms complex concepts into a fun, hands-on experience.</p>"},{"location":"Team%20Organization/#shared-goals","title":"Shared Goals","text":"<p>-Foster open communication within the team to encourage new ideas and provide feedback for one another.</p> <p>-Efficiently manage time and resources to maximize the outcomes of the final product.</p> <p>-Focusing on delivering high quality work to exceed expectations and demonstrate the team's knowledge to others.</p> <p>-Ensure each team member is in agreement on each deliverable prior to submission, ensuring consistent work throughout the entirety of the project.</p> <p>-Develop a unique and innovative solution that demonstrates a scientific/engineering concept through an interactive, physical device.</p>"},{"location":"Team%20Organization/#team-charter-statement","title":"Team Charter Statement","text":"<p>Our team is committed to fostering open communication, efficiently managing time and resources, ensuring high-quality work, aligning on deliverables, and developing an innovative interactive device that demonstrates a scientific or engineering concept.</p>"},{"location":"Team%20Organization/#team-charter","title":"Team Charter","text":""},{"location":"Team%20Organization/#team-communication-channels","title":"Team Communication Channels","text":"<p>Table 1: Team Member Communication Modes</p> Name First Choice Communication Second Choice Communication Third Choice Communication Shon Ha Messenger Phone Discord Maximus Mathews Messenger Discord Zoom Shelton Larance Discord Messenger Zoom Rohan Fernandez Messenger Discord Email"},{"location":"Team%20Organization/#meeting-schedule","title":"Meeting Schedule","text":"<ul> <li>Tuesdays/Thursdays 3:00-5:00</li> <li>Fridays 2:00-5:00</li> <li>Saturdays/Sundays OPEN SCHEDULE</li> </ul>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}