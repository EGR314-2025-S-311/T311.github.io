{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Team Charter & Organization","text":""},{"location":"#team-information","title":"Team Information","text":""},{"location":"#team-members","title":"Team Members","text":"<ul> <li>Shon Ha</li> <li>Maximus Mathews</li> <li>Shelton Larance</li> <li>Rohan Fernandez</li> </ul>"},{"location":"#class-overview","title":"Class Overview","text":"<ul> <li>Preparation Date: 1/16/25</li> <li>Spring 2025</li> <li>ASU EGR 314</li> <li>Instructor: Kevin Nichols</li> </ul>"},{"location":"#product-mission-statement","title":"Product Mission Statement","text":"<p>Our mission is to spark curiosity and excitement for STEM by creating an innovative, web-interactive device that not only captivates students but transforms complex concepts into a fun, hands-on experience.</p>"},{"location":"#shared-goals","title":"Shared Goals","text":"<p>-Foster open communication within the team to encourage new ideas and provide feedback for one another.</p> <p>-Efficiently manage time and resources to maximize the outcomes of the final product.</p> <p>-Focusing on delivering high quality work to exceed expectations and demonstrate the team's knowledge to others.</p> <p>-Ensure each team member is in agreement on each deliverable prior to submission, ensuring consistent work throughout the entirety of the project.</p> <p>-Develop a unique and innovative solution that demonstrates a scientific/engineering concept through an interactive, physical device.</p>"},{"location":"#team-charter-statement","title":"Team Charter Statement","text":"<p>Our team is committed to fostering open communication, efficiently managing time and resources, ensuring high-quality work, aligning on deliverables, and developing an innovative interactive device that demonstrates a scientific or engineering concept.</p>"},{"location":"#team-charter","title":"Team Charter","text":""},{"location":"#team-communication-channels","title":"Team Communication Channels","text":"<p>Table 1: Team Member Communication Modes</p> Name First Choice Communication Second Choice Communication Third Choice Communication Shon Ha Messenger Phone Discord Maximus Mathews Messenger Discord Zoom Shelton Larance Discord Messenger Zoom Rohan Fernandez Messenger Discord Email"},{"location":"BPM/","title":"BPM","text":""},{"location":"BPM/#part-1-team-block-diagram","title":"Part 1: Team Block Diagram","text":""},{"location":"BPM/#part-2-sequence-diagram","title":"Part 2: Sequence Diagram","text":""},{"location":"BPM/#part-3-message-types","title":"Part 3: Message Types","text":"Message Type Description 1. Light Level and Voltage 13 Bytes 2. Button - Digital Signal 1 byte for all 4 buttons (each has 2 bits for 0 and 1) Message Type 1 Definitions Bytes 1 - 2 (uint8_t) Light Level with a space - \"L \" Bytes 3-7 (uint8_t) Light Level Reading - \"XXXX\" Bytes 8-9 (uint8_t) Voltage with a space \" V\" Bytes 10-12 (uint8_t) Voltage Level Reading  \" X.X\" Message Type 2 Definitions Bytes 13-14 (uint8_t) Space with a byte with data of the all Button readings"},{"location":"Ideation/","title":"Ideation and Concept Generation","text":""},{"location":"Ideation/#background-information","title":"Background Information","text":""},{"location":"Ideation/#exhibit-goals","title":"Exhibit Goals","text":"<p>The goal of the team's exhibit is to demonstrate atleast one STEM-based concept in an interactive, web-enabled, physical device. This will require describing how the team's prototype functions along with focusing on the viewer's attention with interactive displays and buttons. The exhibit must also demonstrate a physical action, where pressing the button will activate the device. Another exhibit goal involves engaging the viewer with self-testing and focusing on their attention. This will allow viewers to test their knowledge with the prototype. The prototype must consist of atleast four subsystems, with atleast one individual functionality, microcontroller, 3.3V Switching regulator, and in circuit programming circuitry.</p>"},{"location":"Ideation/#target-audience","title":"Target Audience","text":"<p>The prototype will be demonstrated at the Innovation Showcase, with the intended audience being for ASU alumni, industry professionals, and other ASU students. The target audience is intended for students K-12 interested in learning about science, technology, engineering, or math. The goal is to inspire new generations and foster curiousity about STEM fields through an interactive experience that highlights innovation.</p>"},{"location":"Ideation/#ideation","title":"Ideation","text":"<p>The team performed a product brainstorm to generate 100 ideas on possible products for the project. The team considered durability, safety, and comfort when generating ideas. The team used Padlet to collaborate and generate the ideas. After the 100 ideas were generated, the team grouped ideas thematically, ranking top ideas and combining ideas together to possibly generate new ones. Below are pictures from the brainstorming session along with the grouping process. </p>"},{"location":"Ideation/#brainstorming","title":"Brainstorming","text":""},{"location":"Ideation/#sort-rank-group","title":"Sort, Rank, Group","text":""},{"location":"Ideation/#concept-generation","title":"Concept Generation","text":"<p>Our motor-controlled solar panel aims to create an engaging and educational experience for students in grades K-12. Our design utilizes two separate solar panels attached to a moving bi-directional motor. This motor can be controlled via buttons that the user can control. This offers an interactive experience so that students can learn by doing. The buttons will be made as simple as possible with forward and reverse instructions alongside simple instructions printed alongside them. The confusing operation will be no problem because of its straightforward intuitive design processes that we strive to push throughout the entire design. Photo resistive sensors will also be integrated into the product to detect light. This provides a way for the solar panel to track the light it sees and read it to the OLED display. Both brightness and power will be shown on this OLED screen for viewers to see which will be read from the solar panels and sensors. This product also utilizes innovative WI-FI capabilities using a two-way connection interface. Students can use their mobile devices to control the motors themselves. Younger students will cherish this tangible interaction even more so than the button operations as mentioned previously. This interactive app will also be aimed at common sense and intuition. Frustrating apps drive customers and consumers away, so it is important to our team that we get this to be a smooth and simple operation for all who come across it.</p> <p>Since this will be handled by many students of varying age groups, safety is one of our top priorities. In case something goes wacky with the motors we will ensure all software is bug-free and safe for the public to utilize to its fullest potential. This device will also be made to be durable so it can be picked up and held by younger members. Also, in case of accidental roughhousing, the device will still be functional so that everyone in the museum will still get to view and collaborate with this cool project. As far as breaking this project into manageable groups, it will be split among the four team members. The categories are as follows. The motor, the sensors, and solar panels, the user interface including the OLED and button functionality, and the power source and WI-FI capability. This is split in a way so that each member has an equal and fair amount of work to handle throughout the semester. </p> <p></p>"},{"location":"Ideation/#presentation","title":"Presentation","text":"<p>Youtube Link: https://www.youtube.com/watch?v=1WfjeSirecg </p>"},{"location":"Team%20Organization/","title":"Team Charter and Organization","text":""},{"location":"Team%20Organization/#product-mission-statement","title":"Product Mission Statement","text":"<p>Our mission is to spark curiosity and excitement for STEM by creating an innovative, web-interactive device that not only captivates students but transforms complex concepts into a fun, hands-on experience.</p>"},{"location":"Team%20Organization/#shared-goals","title":"Shared Goals","text":"<p>-Foster open communication within the team to encourage new ideas and provide feedback for one another.</p> <p>-Efficiently manage time and resources to maximize the outcomes of the final product.</p> <p>-Focusing on delivering high quality work to exceed expectations and demonstrate the team's knowledge to others.</p> <p>-Ensure each team member is in agreement on each deliverable prior to submission, ensuring consistent work throughout the entirety of the project.</p> <p>-Develop a unique and innovative solution that demonstrates a scientific/engineering concept through an interactive, physical device.</p>"},{"location":"Team%20Organization/#team-charter-statement","title":"Team Charter Statement","text":"<p>Our team is committed to fostering open communication, efficiently managing time and resources, ensuring high-quality work, aligning on deliverables, and developing an innovative interactive device that demonstrates a scientific or engineering concept.</p>"},{"location":"Team%20Organization/#team-charter","title":"Team Charter","text":""},{"location":"Team%20Organization/#team-communication-channels","title":"Team Communication Channels","text":"<p>Table 1: Team Member Communication Modes</p> Name First Choice Communication Second Choice Communication Third Choice Communication Shon Ha Messenger Phone Discord Maximus Mathews Messenger Discord Zoom Shelton Larance Discord Messenger Zoom Rohan Fernandez Messenger Discord Email"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}